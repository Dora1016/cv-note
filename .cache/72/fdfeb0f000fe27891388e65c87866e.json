{"id":"main.js","dependencies":[],"generated":{"js":"// 通过css选择器找到元素\nvar demo = document.querySelector(\"#demo\");\nvar string = \"\\n\\u4F60\\u597D\\u5440\\uFF0C\\u6211\\u662F\\u524D\\u7AEF\\u5C0F\\u767D\\u767D\\n\\u63A5\\u4E0B\\u6765\\u6211\\u8981\\u52A0\\u6837\\u5F0F\\u5566\\n\\u6211\\u8981\\u52A0\\u7684\\u6837\\u5F0F\\u662F\\nbody{\\n    color:red;\\n}\\n\"; // 解决换行符出现的问题\n// 那能不能不在这里替换呢？去计时器函数看当前的字符是什么，发现一个回车就立即变成html标签，也就是一下子就变成4个字符\n// string.substring(0,n)我就不能再是0-n了，因为顺序变了，之前是12345...现在就要1对4啦，那这个顺序就不一致了，\n// 我们需要一个字符串来容纳我们要展示的字符串，所以有了字符串2\n\nvar string2 = ''; // 注意回车在html里会变成空格，我们要把回车变成html里面的回车string.replace('把啥'，'变啥')\n// 但是replace之后把第一个回车变成br,需要使用正则表达式//g\n// string = string.replace(/\\n/g, '<br>')  \n// 当换行还是没有出现时，就打印那个字符出了问题string[n]\n// 然鹅换行时出现了，但是！！！因为我们用的是innerHtml,就一定会出现html标签<b会被用户看到，等加了r html才发现这是个换行符，为时已晚吖\n// console.log(string.length)   打印方便看问题\n// charCodeAt可以得出一个Unicode字符编码\n// demo.innerHTML=string[n] //初始值\n// substring接受两个参数，从哪到哪\n// let n = 0  //用一个变量等于0 0的好处是可以当作下标\n// 这一句话是有问题的，我们做的所有操作只能影响后面的，如果第一句话里面有回车，\n// 我是不是就不能做一遍，除非我在外面再判断一下是不是回车，代码就重复了，\n// 所以我们得想办法把下面一句代码放在计时器里面，怎么放呢？先直接删掉，那么n就不从0开始，从-1开始\n// demo.innerHTML=string.substring(0,n)\n// 为什么从-1开始呢？最开始你自己写n是0，那么计时器里n+1，就是从1开始了。然而0那就是没人做了\n// 是-1的话，计时器就是从0开始\n\nvar n = -1; // 把1变成2 demo.innerHTML = 2（setTimeout只有变一次效果）\n// 不停的变 |1、用一个变量等于1 |2、初始值就是n |3、setInterval可以一直变\n\n/* setInterval(()=>{\r\n     n+=1\r\n     demo.innerHTML=n\r\n},1000)*/\n//老手不用interval，老手用setTimeout递归能够实现同样的效果，好处是可以随时停止\n\nvar step = function step() {\n  /* console.log('1秒钟之后显示加1')   打印一下帮助理解\r\n     setTimeout( ()=>{\r\n         console.log(n)  //n=10 直接写n>=string.length，n为10之后还是会往下走，n就是11了，内容还是undefined,\r\n         这时候要打印看问题了,打印一个n和字符长度\r\n         写出n就会出现问题.一种写出n+1就能解决问题了,第二种挪位置，\r\n         看下面代码如果你不知道是n还是n+1，两个都试一试\r\n         \r\n         n+=1\r\n         demo.innerHTML=string.substring(0,n) \r\n         if(n>=string.length){   \r\n              return\r\n         }  \r\n         \r\n         //如果是n+1，为什么写n+1呢，是为了解决一开始demo.innerHTML=string[n]依次打印最后结果是n为11时，出现undefined,\r\n         所以下面两行代码你不能在这里待着吖，如果是substring就没这个问题，不过n是会走到11\r\n          n+=1\r\n          demo.innerHTML=string.substring(0,n) \r\n         //\r\n          \r\n         step()\r\n      \r\n          // if(n<string.length){\r\n              step() \r\n             }else{\r\n              console.log('我累了，调不动自己了')  \r\n             }     //委婉写法，不过会往下走，内容就是undefined // \r\n      \r\n     },1000)\r\n  */\n  //优化一下代码，上面的太复杂了，当作自己笔记看\n  setTimeout(function () {\n    console.log(n);\n    n += 1; // console.log(string[n])\n\n    if (string[n] === '\\n') {\n      //如果是回车\n      string2 = string2 + \"<br>\";\n    } else {\n      //如果不是回车就照搬\n      string2 = string2 + string[n];\n    }\n\n    demo.innerHTML = string2; // demo.innerHTML=string.substring(0,n)  不这么写了\n    //console.log(string2)\n\n    if (n < string.length) {\n      step();\n    } else {\n      console.log('好啦，调完了');\n    }\n  }, 100);\n};\n\nstep(); // 为啥是递归呢 自己调用自己，看下面代码\n\n/*  setTimeout( ()=>{\r\n       n+=1\r\n       demo.innerHTML=n\r\n       step()\r\n    \r\n        setTimeout( ()=>{\r\n        \r\n            step()\r\n    \r\n        },1000)\r\n            setTimeout( ()=>{\r\n            \r\n                step() \r\n        \r\n            },1000)\r\n                setTimeout( ()=>{n\r\n               \r\n                   step()\r\n            \r\n                },1000)\r\n    },1000) */\n// 如果多写两次次step() 结果为1 3  2不见了\n\n/*  let step = () => {\r\n        console.log('1秒钟之后显示加1')\r\n        setTimeout( ()=>{\r\n            n+=1\r\n            demo.innerHTML=n\r\n        \r\n        },1000)\r\n    }\r\nstep() =>1变2\r\nstep() =>2不会变3 \r\n因为时间是错的，由于你两次设置setTimeout都是1s之后，\r\n就好像你在睡觉之前跟手机说给我定一个6小时之后的闹钟，\r\n然后你马上又说了一句给我定一个6小时后的闹钟\r\n结果手机会在6小时之后响两次闹钟\r\n这个也一样，你第一次说我在1s之后把1变成2，\r\n然后你第二次又说我要在1s之后把2变成3\r\n所以最后的结果是1变成2马上变成3，中间没有那个过程\r\n不能step再step,除非你是第一次step() 1000,第二次是step() 2000才可能\r\n*/"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"name":"demo","generated":{"line":2,"column":4},"source":"main.js","original":{"line":2,"column":4}},{"generated":{"line":2,"column":8},"source":"main.js","original":{"line":2,"column":8}},{"name":"document","generated":{"line":2,"column":11},"source":"main.js","original":{"line":2,"column":11}},{"generated":{"line":2,"column":19},"source":"main.js","original":{"line":2,"column":19}},{"name":"querySelector","generated":{"line":2,"column":20},"source":"main.js","original":{"line":2,"column":20}},{"generated":{"line":2,"column":33},"source":"main.js","original":{"line":2,"column":11}},{"generated":{"line":2,"column":34},"source":"main.js","original":{"line":2,"column":34}},{"generated":{"line":2,"column":41},"source":"main.js","original":{"line":2,"column":11}},{"generated":{"line":2,"column":42},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"name":"string","generated":{"line":3,"column":4},"source":"main.js","original":{"line":5,"column":4}},{"generated":{"line":3,"column":10},"source":"main.js","original":{"line":5,"column":10}},{"generated":{"line":3,"column":211},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":3,"column":213},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":17,"column":0}},{"name":"string2","generated":{"line":8,"column":4},"source":"main.js","original":{"line":17,"column":4}},{"generated":{"line":8,"column":11},"source":"main.js","original":{"line":17,"column":11}},{"generated":{"line":8,"column":14},"source":"main.js","original":{"line":17,"column":14}},{"generated":{"line":8,"column":16},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":8,"column":18},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":36,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":37,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":38,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":41,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":42,"column":0}},{"name":"n","generated":{"line":25,"column":4},"source":"main.js","original":{"line":42,"column":4}},{"generated":{"line":25,"column":5},"source":"main.js","original":{"line":42,"column":5}},{"generated":{"line":25,"column":8},"source":"main.js","original":{"line":42,"column":7}},{"generated":{"line":25,"column":9},"source":"main.js","original":{"line":42,"column":8}},{"generated":{"line":25,"column":10},"source":"main.js","original":{"line":42,"column":0}},{"generated":{"line":25,"column":12},"source":"main.js","original":{"line":44,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":45,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":46,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":50,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":54,"column":0}},{"name":"step","generated":{"line":34,"column":4},"source":"main.js","original":{"line":54,"column":4}},{"generated":{"line":34,"column":8},"source":"main.js","original":{"line":54,"column":8}},{"generated":{"line":34,"column":11},"source":"main.js","original":{"line":54,"column":11}},{"name":"step","generated":{"line":34,"column":20},"source":"main.js","original":{"line":54,"column":4}},{"generated":{"line":34,"column":24},"source":"main.js","original":{"line":54,"column":11}},{"generated":{"line":34,"column":27},"source":"main.js","original":{"line":54,"column":17}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":55,"column":0}},{"generated":{"line":64,"column":0},"source":"main.js","original":{"line":84,"column":0}},{"name":"setTimeout","generated":{"line":65,"column":0},"source":"main.js","original":{"line":85,"column":4}},{"name":"setTimeout","generated":{"line":65,"column":2},"source":"main.js","original":{"line":85,"column":4}},{"generated":{"line":65,"column":12},"source":"main.js","original":{"line":85,"column":14}},{"generated":{"line":65,"column":13},"source":"main.js","original":{"line":85,"column":16}},{"generated":{"line":65,"column":25},"source":"main.js","original":{"line":85,"column":20}},{"name":"console","generated":{"line":66,"column":0},"source":"main.js","original":{"line":86,"column":8}},{"name":"console","generated":{"line":66,"column":4},"source":"main.js","original":{"line":86,"column":8}},{"generated":{"line":66,"column":11},"source":"main.js","original":{"line":86,"column":15}},{"name":"log","generated":{"line":66,"column":12},"source":"main.js","original":{"line":86,"column":16}},{"generated":{"line":66,"column":15},"source":"main.js","original":{"line":86,"column":8}},{"name":"n","generated":{"line":66,"column":16},"source":"main.js","original":{"line":86,"column":20}},{"generated":{"line":66,"column":17},"source":"main.js","original":{"line":86,"column":8}},{"name":"n","generated":{"line":67,"column":0},"source":"main.js","original":{"line":87,"column":8}},{"name":"n","generated":{"line":67,"column":4},"source":"main.js","original":{"line":87,"column":8}},{"generated":{"line":67,"column":5},"source":"main.js","original":{"line":87,"column":9}},{"generated":{"line":67,"column":9},"source":"main.js","original":{"line":87,"column":11}},{"generated":{"line":67,"column":10},"source":"main.js","original":{"line":87,"column":8}},{"generated":{"line":67,"column":11},"source":"main.js","original":{"line":85,"column":20}},{"generated":{"line":67,"column":12},"source":"main.js","original":{"line":88,"column":8}},{"generated":{"line":69,"column":0},"source":"main.js","original":{"line":89,"column":8}},{"name":"string","generated":{"line":69,"column":8},"source":"main.js","original":{"line":89,"column":11}},{"generated":{"line":69,"column":14},"source":"main.js","original":{"line":89,"column":17}},{"name":"n","generated":{"line":69,"column":15},"source":"main.js","original":{"line":89,"column":18}},{"generated":{"line":69,"column":16},"source":"main.js","original":{"line":89,"column":17}},{"generated":{"line":69,"column":17},"source":"main.js","original":{"line":89,"column":11}},{"generated":{"line":69,"column":22},"source":"main.js","original":{"line":89,"column":25}},{"generated":{"line":69,"column":26},"source":"main.js","original":{"line":89,"column":8}},{"generated":{"line":69,"column":28},"source":"main.js","original":{"line":89,"column":30}},{"generated":{"line":70,"column":0},"source":"main.js","original":{"line":89,"column":34}},{"name":"string2","generated":{"line":71,"column":0},"source":"main.js","original":{"line":90,"column":12}},{"name":"string2","generated":{"line":71,"column":6},"source":"main.js","original":{"line":90,"column":12}},{"generated":{"line":71,"column":13},"source":"main.js","original":{"line":90,"column":19}},{"name":"string2","generated":{"line":71,"column":16},"source":"main.js","original":{"line":90,"column":22}},{"generated":{"line":71,"column":23},"source":"main.js","original":{"line":90,"column":29}},{"generated":{"line":71,"column":26},"source":"main.js","original":{"line":90,"column":32}},{"generated":{"line":71,"column":32},"source":"main.js","original":{"line":90,"column":12}},{"generated":{"line":72,"column":0},"source":"main.js","original":{"line":92,"column":9}},{"generated":{"line":72,"column":5},"source":"main.js","original":{"line":89,"column":8}},{"generated":{"line":72,"column":11},"source":"main.js","original":{"line":92,"column":13}},{"generated":{"line":73,"column":0},"source":"main.js","original":{"line":92,"column":16}},{"name":"string2","generated":{"line":74,"column":0},"source":"main.js","original":{"line":93,"column":12}},{"name":"string2","generated":{"line":74,"column":6},"source":"main.js","original":{"line":93,"column":12}},{"generated":{"line":74,"column":13},"source":"main.js","original":{"line":93,"column":19}},{"name":"string2","generated":{"line":74,"column":16},"source":"main.js","original":{"line":93,"column":22}},{"generated":{"line":74,"column":23},"source":"main.js","original":{"line":93,"column":29}},{"name":"string","generated":{"line":74,"column":26},"source":"main.js","original":{"line":93,"column":32}},{"generated":{"line":74,"column":32},"source":"main.js","original":{"line":93,"column":38}},{"name":"n","generated":{"line":74,"column":33},"source":"main.js","original":{"line":93,"column":39}},{"generated":{"line":74,"column":34},"source":"main.js","original":{"line":93,"column":38}},{"generated":{"line":74,"column":35},"source":"main.js","original":{"line":93,"column":12}},{"generated":{"line":75,"column":0},"source":"main.js","original":{"line":94,"column":9}},{"name":"demo","generated":{"line":77,"column":0},"source":"main.js","original":{"line":95,"column":8}},{"name":"demo","generated":{"line":77,"column":4},"source":"main.js","original":{"line":95,"column":8}},{"generated":{"line":77,"column":8},"source":"main.js","original":{"line":95,"column":12}},{"name":"innerHTML","generated":{"line":77,"column":9},"source":"main.js","original":{"line":95,"column":13}},{"generated":{"line":77,"column":18},"source":"main.js","original":{"line":95,"column":8}},{"name":"string2","generated":{"line":77,"column":21},"source":"main.js","original":{"line":95,"column":25}},{"generated":{"line":77,"column":28},"source":"main.js","original":{"line":95,"column":8}},{"generated":{"line":77,"column":29},"source":"main.js","original":{"line":85,"column":20}},{"generated":{"line":77,"column":30},"source":"main.js","original":{"line":96,"column":8}},{"generated":{"line":78,"column":0},"source":"main.js","original":{"line":98,"column":8}},{"generated":{"line":80,"column":0},"source":"main.js","original":{"line":99,"column":8}},{"name":"n","generated":{"line":80,"column":8},"source":"main.js","original":{"line":99,"column":11}},{"generated":{"line":80,"column":9},"source":"main.js","original":{"line":99,"column":12}},{"name":"string","generated":{"line":80,"column":12},"source":"main.js","original":{"line":99,"column":15}},{"generated":{"line":80,"column":18},"source":"main.js","original":{"line":99,"column":21}},{"name":"length","generated":{"line":80,"column":19},"source":"main.js","original":{"line":99,"column":22}},{"generated":{"line":80,"column":25},"source":"main.js","original":{"line":99,"column":8}},{"generated":{"line":80,"column":27},"source":"main.js","original":{"line":99,"column":29}},{"name":"step","generated":{"line":81,"column":0},"source":"main.js","original":{"line":100,"column":12}},{"name":"step","generated":{"line":81,"column":6},"source":"main.js","original":{"line":100,"column":12}},{"generated":{"line":81,"column":10},"source":"main.js","original":{"line":100,"column":16}},{"generated":{"line":82,"column":0},"source":"main.js","original":{"line":101,"column":9}},{"generated":{"line":82,"column":5},"source":"main.js","original":{"line":99,"column":8}},{"generated":{"line":82,"column":11},"source":"main.js","original":{"line":101,"column":13}},{"name":"console","generated":{"line":83,"column":0},"source":"main.js","original":{"line":102,"column":12}},{"name":"console","generated":{"line":83,"column":6},"source":"main.js","original":{"line":102,"column":12}},{"generated":{"line":83,"column":13},"source":"main.js","original":{"line":102,"column":19}},{"name":"log","generated":{"line":83,"column":14},"source":"main.js","original":{"line":102,"column":20}},{"generated":{"line":83,"column":17},"source":"main.js","original":{"line":102,"column":12}},{"generated":{"line":83,"column":18},"source":"main.js","original":{"line":102,"column":24}},{"generated":{"line":83,"column":26},"source":"main.js","original":{"line":102,"column":12}},{"generated":{"line":84,"column":0},"source":"main.js","original":{"line":103,"column":9}},{"generated":{"line":85,"column":0},"source":"main.js","original":{"line":104,"column":5}},{"generated":{"line":85,"column":3},"source":"main.js","original":{"line":85,"column":14}},{"generated":{"line":85,"column":5},"source":"main.js","original":{"line":104,"column":6}},{"generated":{"line":85,"column":8},"source":"main.js","original":{"line":85,"column":14}},{"generated":{"line":85,"column":9},"source":"main.js","original":{"line":85,"column":4}},{"generated":{"line":86,"column":0},"source":"main.js","original":{"line":106,"column":1}},{"generated":{"line":86,"column":1},"source":"main.js","original":{"line":54,"column":0}},{"name":"step","generated":{"line":88,"column":0},"source":"main.js","original":{"line":107,"column":0}},{"generated":{"line":88,"column":4},"source":"main.js","original":{"line":107,"column":4}},{"generated":{"line":88,"column":8},"source":"main.js","original":{"line":109,"column":0}},{"generated":{"line":90,"column":0},"source":"main.js","original":{"line":110,"column":0}},{"generated":{"line":111,"column":0},"source":"main.js","original":{"line":131,"column":0}},{"generated":{"line":113,"column":0},"source":"main.js","original":{"line":132,"column":0}}],"sources":{"main.js":"// 通过css选择器找到元素\r\nlet demo = document.querySelector(\"#demo\")  \r\n\r\n\r\nlet string=`\r\n你好呀，我是前端小白白\r\n接下来我要加样式啦\r\n我要加的样式是\r\nbody{\r\n    color:red;\r\n}\r\n`\r\n// 解决换行符出现的问题\r\n// 那能不能不在这里替换呢？去计时器函数看当前的字符是什么，发现一个回车就立即变成html标签，也就是一下子就变成4个字符\r\n// string.substring(0,n)我就不能再是0-n了，因为顺序变了，之前是12345...现在就要1对4啦，那这个顺序就不一致了，\r\n// 我们需要一个字符串来容纳我们要展示的字符串，所以有了字符串2\r\nlet string2 = ''\r\n\r\n\r\n// 注意回车在html里会变成空格，我们要把回车变成html里面的回车string.replace('把啥'，'变啥')\r\n// 但是replace之后把第一个回车变成br,需要使用正则表达式//g\r\n// string = string.replace(/\\n/g, '<br>')  \r\n// 当换行还是没有出现时，就打印那个字符出了问题string[n]\r\n// 然鹅换行时出现了，但是！！！因为我们用的是innerHtml,就一定会出现html标签<b会被用户看到，等加了r html才发现这是个换行符，为时已晚吖\r\n\r\n\r\n// console.log(string.length)   打印方便看问题\r\n\r\n// charCodeAt可以得出一个Unicode字符编码\r\n\r\n\r\n// demo.innerHTML=string[n] //初始值\r\n// substring接受两个参数，从哪到哪\r\n\r\n// let n = 0  //用一个变量等于0 0的好处是可以当作下标\r\n// 这一句话是有问题的，我们做的所有操作只能影响后面的，如果第一句话里面有回车，\r\n// 我是不是就不能做一遍，除非我在外面再判断一下是不是回车，代码就重复了，\r\n// 所以我们得想办法把下面一句代码放在计时器里面，怎么放呢？先直接删掉，那么n就不从0开始，从-1开始\r\n// demo.innerHTML=string.substring(0,n)\r\n// 为什么从-1开始呢？最开始你自己写n是0，那么计时器里n+1，就是从1开始了。然而0那就是没人做了\r\n// 是-1的话，计时器就是从0开始\r\nlet n= -1\r\n\r\n// 把1变成2 demo.innerHTML = 2（setTimeout只有变一次效果）\r\n// 不停的变 |1、用一个变量等于1 |2、初始值就是n |3、setInterval可以一直变\r\n/* setInterval(()=>{\r\n     n+=1\r\n     demo.innerHTML=n\r\n},1000)*/\r\n//老手不用interval，老手用setTimeout递归能够实现同样的效果，好处是可以随时停止\r\n\r\n\r\n\r\nlet step = () => {\r\n/* console.log('1秒钟之后显示加1')   打印一下帮助理解\r\n   setTimeout( ()=>{\r\n       console.log(n)  //n=10 直接写n>=string.length，n为10之后还是会往下走，n就是11了，内容还是undefined,\r\n       这时候要打印看问题了,打印一个n和字符长度\r\n       写出n就会出现问题.一种写出n+1就能解决问题了,第二种挪位置，\r\n       看下面代码如果你不知道是n还是n+1，两个都试一试\r\n       \r\n       n+=1\r\n       demo.innerHTML=string.substring(0,n) \r\n       if(n>=string.length){   \r\n            return\r\n       }  \r\n       \r\n       //如果是n+1，为什么写n+1呢，是为了解决一开始demo.innerHTML=string[n]依次打印最后结果是n为11时，出现undefined,\r\n       所以下面两行代码你不能在这里待着吖，如果是substring就没这个问题，不过n是会走到11\r\n        n+=1\r\n        demo.innerHTML=string.substring(0,n) \r\n       //\r\n        \r\n       step()\r\n    \r\n        // if(n<string.length){\r\n            step() \r\n           }else{\r\n            console.log('我累了，调不动自己了')  \r\n           }     //委婉写法，不过会往下走，内容就是undefined // \r\n    \r\n   },1000)\r\n*/\r\n//优化一下代码，上面的太复杂了，当作自己笔记看\r\n    setTimeout( ()=>{\r\n        console.log(n)\r\n        n+=1\r\n        // console.log(string[n])\r\n        if(string[n] === '\\n'){   //如果是回车\r\n            string2 = string2 + \"<br>\"\r\n\r\n        }else{  //如果不是回车就照搬\r\n            string2 = string2 + string[n]\r\n        }\r\n        demo.innerHTML = string2\r\n        // demo.innerHTML=string.substring(0,n)  不这么写了\r\n        \r\n        //console.log(string2)\r\n        if(n < string.length){\r\n            step()\r\n        }else{\r\n            console.log('好啦，调完了')\r\n        }\r\n    },100)\r\n\r\n}\r\nstep()\r\n\r\n// 为啥是递归呢 自己调用自己，看下面代码\r\n/*  setTimeout( ()=>{\r\n       n+=1\r\n       demo.innerHTML=n\r\n       step()\r\n    \r\n        setTimeout( ()=>{\r\n        \r\n            step()\r\n    \r\n        },1000)\r\n            setTimeout( ()=>{\r\n            \r\n                step() \r\n        \r\n            },1000)\r\n                setTimeout( ()=>{n\r\n               \r\n                   step()\r\n            \r\n                },1000)\r\n    },1000) */\r\n// 如果多写两次次step() 结果为1 3  2不见了\r\n/*  let step = () => {\r\n        console.log('1秒钟之后显示加1')\r\n        setTimeout( ()=>{\r\n            n+=1\r\n            demo.innerHTML=n\r\n        \r\n        },1000)\r\n    }\r\nstep() =>1变2\r\nstep() =>2不会变3 \r\n因为时间是错的，由于你两次设置setTimeout都是1s之后，\r\n就好像你在睡觉之前跟手机说给我定一个6小时之后的闹钟，\r\n然后你马上又说了一句给我定一个6小时后的闹钟\r\n结果手机会在6小时之后响两次闹钟\r\n这个也一样，你第一次说我在1s之后把1变成2，\r\n然后你第二次又说我要在1s之后把2变成3\r\n所以最后的结果是1变成2马上变成3，中间没有那个过程\r\n不能step再step,除非你是第一次step() 1000,第二次是step() 2000才可能\r\n*/\r\n"},"lineCount":null}},"error":null,"hash":"6b2f4f1abcf9e3c141fd86db8e1ea1db","cacheData":{"env":{}}}